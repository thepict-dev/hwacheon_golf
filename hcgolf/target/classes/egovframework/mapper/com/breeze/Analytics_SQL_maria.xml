<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="analyticsMapper">

	<select id="selectAnalyticsList" parameterType="AnalyticsVO" resultType="AnalyticsVO">
		SELECT @RNUM := @RNUM + 1 AS ROWNUM, t.* FROM
		(
			SELECT
				*
			FROM SPW_ANALYTICS
			WHERE USE_FLAG = 'Y'
			<!-- 키워드 검색 -->
	    	<if test="searchWrd != null and searchWrd != ''">
				<choose>
					<when test="searchCnd == 1">
						AND (ANALYTICS_NAME LIKE CONCAT ('%',#{searchWrd},'%') OR ANALYTICS_ID LIKE CONCAT ('%',#{searchWrd},'%') )
					</when >
					<when test="searchCnd == 2">
						AND ANALYTICS_NAME LIKE CONCAT ('%',#{searchWrd},'%')
					</when >
					<when test="searchCnd == 3">
						AND ANALYTICS_ID LIKE CONCAT ('%',#{searchWrd},'%')
					</when >
				</choose>
			</if>
			<!-- 키워드 검색 -->
			ORDER BY REG_DATE ASC
		)t, ( SELECT @RNUM := 0 ) R 
		ORDER BY ROWNUM DESC
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>
	
	<select id="selectAnalyticsListCnt" parameterType="AnalyticsVO" resultType="java.lang.Integer">
		SELECT
			COUNT(a.ANALYTICS_ID)
		FROM
			SPW_ANALYTICS a
		WHERE
			USE_FLAG = 'Y'
			<!-- 키워드 검색 -->
	    	<if test="searchWrd != null and searchWrd != ''">
				<choose>
					<when test="searchCnd == 1">
						AND (a.ANALYTICS_NAME LIKE CONCAT ('%',#{searchWrd},'%') OR a.ANALYTICS_ID LIKE CONCAT ('%',#{searchWrd},'%') )
					</when >
					<when test="searchCnd == 2">
						AND a.ANALYTICS_NAME LIKE CONCAT ('%',#{searchWrd},'%')
					</when >
					<when test="searchCnd == 3">
						AND a.ANALYTICS_ID LIKE CONCAT ('%',#{searchWrd},'%')
					</when >
				</choose>
			</if>
			<!-- 키워드 검색 -->
	</select>
	
	<select id="selectAnalyticsView" parameterType="AnalyticsVO" resultType="AnalyticsVO">
		SELECT
			*
		FROM
			SPW_ANALYTICS a
		WHERE
			ANALYTICS_ID = #{analyticsId}
		AND
			USE_FLAG = 'Y'
	</select>
	
	<insert id="analyticsInsert" parameterType="AnalyticsVO">
		<selectKey resultType="String" keyProperty="analyticsId" order="BEFORE">
			SELECT #{analyticsId} AS analyticsId FROM dual
		</selectKey>
		INSERT INTO SPW_ANALYTICS
			(ANALYTICS_ID, ANALYTICS_NAME, ANALYTICS_HEAD, ANALYTICS_BODY, REG_ID, REG_DATE, UPD_ID, UPD_DATE, USE_FLAG)
		VALUES
			(#{analyticsId}, #{analyticsName}, #{analyticsHead}, #{analyticsBody}, #{regId}, SYSDATE(), #{updId}, SYSDATE(), 'Y')
	</insert>
	
	<update id="analyticsUpdate" parameterType="AnalyticsVO">
		UPDATE
			SPW_ANALYTICS
		SET
			ANALYTICS_NAME = #{analyticsName},
			ANALYTICS_HEAD = #{analyticsHead},
			ANALYTICS_BODY = #{analyticsBody},
			UPD_ID = #{updId},
			UPD_DATE = SYSDATE()
		WHERE
			ANALYTICS_ID = #{analyticsId}
		AND
			USE_FLAG = 'Y'
	</update>
	
	<update id="analyticsDelete" parameterType="AnalyticsVO">
		UPDATE
			SPW_ANALYTICS
		SET
			USE_FLAG = 'N',
			UPD_ID = #{updId},
			UPD_DATE = SYSDATE()
		WHERE
			ANALYTICS_ID = #{analyticsId}
		AND
			USE_FLAG = 'Y'
	</update>
	
	<insert id="analyticsBakInsert" parameterType="AnalyticsVO">
		INSERT INTO SPW_ANALYTICS_BAK
		SELECT #{bakAnalyticsId}, A.* FROM SPW_ANALYTICS A WHERE A.ANALYTICS_ID = #{analyticsId}
	</insert>
	
	<select id="selectAnalyticsBakList" parameterType="AnalyticsVO" resultType="AnalyticsVO">
		SELECT @RNUM := @RNUM + 1 AS ROWNUM, t.* FROM
		(
			SELECT
				*
			FROM 
				SPW_ANALYTICS_BAK
			WHERE
				ANALYTICS_ID = #{analyticsId}
			ORDER BY UPD_DATE ASC
		)t, ( SELECT @RNUM := 0 ) R 
		ORDER BY ROWNUM DESC
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>
	
	<select id="selectAnalyticsBakListCnt" parameterType="AnalyticsVO" resultType="java.lang.Integer">
		SELECT
			COUNT(a.BAK_ANALYTICS_ID)
		FROM
			SPW_ANALYTICS_BAK a
		WHERE
			ANALYTICS_ID = #{analyticsId}
	</select>
	
	<select id="selectAnalyticsBakView" parameterType="AnalyticsVO" resultType="AnalyticsVO">
		SELECT
			*
		FROM
			SPW_ANALYTICS_BAK a
		WHERE
			BAK_ANALYTICS_ID = #{bakAnalyticsId}
	</select>
	
</mapper>